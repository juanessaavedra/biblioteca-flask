# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout cÃ³digo
      uses: actions/checkout@v4
    
    - name: Instalar Docker Compose (si no estÃ¡ presente)
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
      # Este paso asegura que docker-compose estÃ© disponible en el entorno del runner.
      # Aunque suele venir preinstalado en ubuntu-latest, esta es una medida robusta.
    
    - name: Construir y levantar servicios
      run: docker-compose up --build -d
    
    - name: Ejecutar pruebas unitarias
      run: docker-compose exec -T app pytest tests/unit/ -v
    
    - name: Ejecutar pruebas de integraciÃ³n
      run: docker-compose exec -T app pytest tests/integration/ -v
    
    - name: Verificar endpoints principales
      run: |
        curl -f http://localhost:5000/health
        curl -f http://localhost:5000/usuarios
        curl -f http://localhost:5000/libros
    
    - name: Limpiar
      run: docker-compose down

  # Nuevo job para el mensaje de despliegue
  deploy:
    runs-on: ubuntu-latest
    needs: test # Este job solo se ejecutarÃ¡ si el job 'test' se completÃ³ con Ã©xito
    
    steps:
    - name: Mensaje de Listo para Desplegar
      run: echo "ðŸŽ‰ Listo para desplegar ðŸŽ‰"
