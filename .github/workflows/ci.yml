# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
    
    - name: Instalar Docker Compose (si no est√° presente)
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    
    - name: Construir y levantar servicios
      run: docker-compose up --build -d

    # --- NUEVAS PASOS DE DIAGN√ìSTICO ---
    - name: Esperar a que los servicios est√©n listos (importante para la base de datos)
      run: |
        echo "Esperando a que el servicio 'db' est√© completamente listo..."
        # Este bucle espera hasta que el puerto 5432 (PostgreSQL) est√© abierto en el contenedor 'db'
        # Es crucial para asegurar que la base de datos est√© lista para aceptar conexiones
        timeout 60 bash -c 'until pg_isready -h db -p 5432 -U youruser; do echo "DB not ready yet..."; sleep 2; done;'
        echo "Servicio 'db' listo."
        
        echo "Esperando a que el servicio 'app' est√© listo (si corresponde)..."
        # Opcional: Esperar a que tu aplicaci√≥n responda a un health check si tiene uno
        # Por ejemplo, si tienes un endpoint /health que indica que la app est√° lista
        # timeout 60 bash -c 'until curl --output /dev/null --silent --head --fail http://localhost:5000/health; do echo "App not ready yet..."; sleep 2; done;'
        # echo "Servicio 'app' listo."
      env:
        PGPASSWORD: yourpassword # Necesitas la contrase√±a para pg_isready si el usuario la requiere

    - name: Verificar el estado de los contenedores
      run: docker-compose ps

    - name: Mostrar logs del servicio 'app' si hay un fallo
      # Esto solo se ejecutar√° si el paso anterior (o 'Construir y levantar') falla.
      # Usamos 'always()' para asegurarnos de obtener los logs incluso si el paso falla.
      if: failure()
      run: |
        echo "--- Logs del servicio 'app' ---"
        docker-compose logs app
        echo "--- Fin de logs del servicio 'app' ---"
    # --- FIN DE NUEVAS PASOS DE DIAGN√ìSTICO ---
    
    - name: Ejecutar pruebas unitarias
      run: docker-compose exec -T app pytest tests/unit/ -v

    - name: Ejecutar pruebas de integraci√≥n
      run: docker-compose exec -T app pytest tests/integration/ -v

    - name: Ejecutar pruebas de UI
      run: docker-compose exec -T app pytest tests/ui/ -v

    - name: Ejecutar pruebas de seguridad
      run: docker-compose exec -T app pytest tests/security/ -v

    - name: Ejecutar pruebas de rendimiento
      run: docker-compose exec -T app pytest tests/rendimiento/ -v

    - name: Ejecutar pruebas de carga y estr√©s
      run: docker-compose exec -T app locust -f tests/carga-estres/locustfile.py --headless -u 10 -r 2 -t 1m

    - name: Verificar endpoints principales
      run: |
        curl -f http://localhost:5000/health
        curl -f http://localhost:5000/usuarios
        curl -f http://localhost:5000/libros
    
    - name: Limpiar
      run: docker-compose down

  deploy:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Mensaje de Listo para Desplegar
      run: echo "üéâ Listo para desplegar üéâ"